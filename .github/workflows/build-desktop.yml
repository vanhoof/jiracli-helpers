name: Build Desktop Apps

on:
  push:
    branches: [ main, experimental-frontend ]
  pull_request:
    branches: [ main, experimental-frontend ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci
      
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build React app
      working-directory: frontend
      run: npm run build
      
    - name: Build Electron app (macOS)
      if: matrix.os == 'macos-latest'
      working-directory: frontend
      run: npm run dist-mac
      env:
        CSC_IDENTITY_AUTO_DISCOVERY: false
        
    - name: Build Electron app (Linux)
      if: matrix.os == 'ubuntu-latest'
      working-directory: frontend
      run: npm run dist-linux
      
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-app
        path: |
          frontend/dist/*.dmg
          frontend/dist/*-mac.zip
        
    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-app
        path: frontend/dist/*.AppImage
        
    - name: Release assets (Tagged Release)
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          frontend/dist/*.dmg
          frontend/dist/*-mac.zip
          frontend/dist/*.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update Latest Pre-release (macOS)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.os == 'macos-latest'
      uses: softprops/action-gh-release@v1
      with:
        name: Latest Development Build
        tag_name: latest
        prerelease: true
        body: |
          **⚠️ Development Build**
          
          This is an automatically generated build from the latest main branch.
          It may contain bugs or incomplete features.
          
          **Commit:** ${{ github.sha }}
          **Date:** ${{ github.event.head_commit.timestamp }}
          
          For stable releases, see the [Releases page](https://github.com/${{ github.repository }}/releases).
        files: |
          frontend/dist/*.dmg
          frontend/dist/*-mac.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update Latest Pre-release (Linux)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest'
      uses: softprops/action-gh-release@v1
      with:
        name: Latest Development Build
        tag_name: latest
        prerelease: true
        body: |
          **⚠️ Development Build**
          
          This is an automatically generated build from the latest main branch.
          It may contain bugs or incomplete features.
          
          **Commit:** ${{ github.sha }}
          **Date:** ${{ github.event.head_commit.timestamp }}
          
          For stable releases, see the [Releases page](https://github.com/${{ github.repository }}/releases).
        files: |
          frontend/dist/*.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}